<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qidianxuan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qidianxuan.github.io/"/>
  <updated>2019-11-24T10:18:48.707Z</updated>
  <id>http://qidianxuan.github.io/</id>
  
  <author>
    <name>qidianxuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编译原理-词法分析</title>
    <link href="http://qidianxuan.github.io/2019/11/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://qidianxuan.github.io/2019/11/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/</id>
    <published>2019-11-24T05:27:15.000Z</published>
    <updated>2019-11-24T10:18:48.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="词法分析器"><a href="#词法分析器" class="headerlink" title="词法分析器"></a>词法分析器</h2><ul><li>词法分析器: 把构成源程序的字符流翻译成记号(token)流，还完成和用户接口的一些任务<br>  其中:<ul><li>词法单元: 亦称单词, 编程语言中合法的字符串</li><li>词法记号: 满足某种给定规则(模式)的词法单元<br>示例: 对于词法记号NUM, 其词法单元可能有3.1, 10, 2.8E12等数字, 其”模式”即”认定为数字的字符串”  <h3 id="串和语言"><a href="#串和语言" class="headerlink" title="串和语言"></a>串和语言</h3></li></ul></li><li>字母表: 符号的有限集合.   示例: Σ = {0,1}</li><li>串: 符号的有穷序列.       示例: 0110,ε(长度为0的空串)<br>运算:<ul><li>连接: xy, 其中sε = εs = s</li><li>积:  $ s^0 = \epsilon , s^i = s^{i-1}s(i&gt;0) $</li></ul></li><li>语言: 字母表上的一个串集. 示例: {ε, 0, 11, …}, {ε}, ∅<br>运算:<ul><li>和: $ L \bigcup M = {s|s \in L 或 s \in M } $</li><li>连接: $ LM = {st|s \in L 且 s \in M} $</li><li>指数: $ L^0={ε}, L^i = L^{i-1}L $</li><li>闭包: $ L^* = L^0\bigcup L^1\bigcup L^2\bigcup … $</li><li>正闭包: $L^+ = L^1 \bigcup L^2 \bigcup … 并且 L^* = L^0 \bigcup L^+$<h3 id="正规式-正则表达式"><a href="#正规式-正则表达式" class="headerlink" title="正规式(正则表达式)"></a>正规式(正则表达式)</h3></li></ul></li><li>正规式: 按照一定的定义规则, 由较简单的正规式构成, 每个正规式r表示一个<strong>语言</strong>L(r)</li><li>正规式是用于说明词法单元如何对应到词法记号的模式。与非形式化的描述相比，正规式更具形式化，更加精确</li><li>定义如下<table><thead><tr><th align="center">正规式</th><th align="center">定义的语言</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">$\epsilon$</td><td align="center">${\epsilon}$</td><td align="center">以下定义均在字母表$\sum$中</td></tr><tr><td align="center">a</td><td align="center">{a}</td><td align="center">$a \in \sum $</td></tr><tr><td align="center">r|s</td><td align="center">$L(r) \bigcup L(s)$</td><td align="center">r和s为正规式</td></tr><tr><td align="center">rs</td><td align="center">L(r)L(s)</td><td align="center">L(r)L(s) = L(s)L(r)</td></tr><tr><td align="center">$ r^* $</td><td align="center">$  L(r)^* $</td><td align="center">r为正规式</td></tr><tr><td align="center">* 运算符优先级: * &gt; 连接运算 &gt;</td><td align="center"></td><td align="center"></td></tr></tbody></table></li><li>举例<br>  |正规式|定义的语言|<br>  |:—:|:—:|:—:|<br>  |$(a|b)(a|b)$|{aa, ab, ba, bb}|<br>  |$(a|b)^*$|由a和b构成的所有串集|</li></ul><h3 id="词法记号的识别"><a href="#词法记号的识别" class="headerlink" title="词法记号的识别"></a>词法记号的识别</h3><ul><li><p>图形化:</p><table><thead><tr><th align="center">正规式</th><th align="center">状态转换图</th></tr></thead><tbody><tr><td align="center">$d \rightarrow a$</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/dtoa2.jpg" alt="dtoa.jpg"></td></tr><tr><td align="center">$d \rightarrow ab$</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/dtoab.jpg" alt="dtoab.jpg"></td></tr><tr><td align="center">$d \rightarrow a</td><td align="center">b$</td></tr><tr><td align="center">$d \rightarrow a^* $</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/dtoap.jpg" alt="dtoap.jpg"></td></tr><tr><td align="center">$d \rightarrow a? $  (a出现1次或0次)</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/da.jpg" alt="da.jpg"></td></tr></tbody></table></li><li><p>举例:</p><table><thead><tr><th align="center">正规式</th><th align="center">状态转换图</th></tr></thead><tbody><tr><td align="center">$d \rightarrow a(a</td><td align="center">b)^* $</td></tr></tbody></table></li></ul><h3 id="有限自动机"><a href="#有限自动机" class="headerlink" title="有限自动机"></a>有限自动机</h3><ul><li><p>识别器: 是一个程序，取串x作为输入，当x是语言的句子时，它回答“是”，否则回答“不是”</p></li><li><p>状态转换图即有限自动机, 可以作为识别器</p><h4 id="确定的有限自动机-DFA"><a href="#确定的有限自动机-DFA" class="headerlink" title="确定的有限自动机(DFA)"></a>确定的有限自动机(DFA)</h4></li><li><p>DFA是一个数学模型, 包括</p><ul><li>状态集合S</li><li>输入字母表$\sum$</li><li>转换函数$move: S \times \sum \rightarrow S$</li><li>唯一的初态$s \in S$</li><li>终态集合$F \subseteq S$<h4 id="不确定的有限自动机-NFA"><a href="#不确定的有限自动机-NFA" class="headerlink" title="不确定的有限自动机(NFA)"></a>不确定的有限自动机(NFA)</h4></li></ul></li><li><p>NFA是一个数学模型, 包括</p><ul><li>状态集合S</li><li>输入字母表$\sum$</li><li>转换函数$move: S \times ( \sum \bigcup { \epsilon })  \rightarrow S$ (此处$\epsilon$理解为”未知”)</li><li>唯一的初态$s \in S$</li><li>终态集合$F \subseteq S$<h4 id="DFA与NFA的对比"><a href="#DFA与NFA的对比" class="headerlink" title="DFA与NFA的对比"></a>DFA与NFA的对比</h4></li></ul></li><li><p>举例:</p><table><thead><tr><th align="center">正规式</th><th align="center">DFA</th><th align="center">NFA</th></tr></thead><tbody><tr><td align="center">$ (a</td><td align="center">b)^*ab $</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/dfaexam.jpg" alt="dfae.jpg"></td></tr><tr><td align="center">状态转移表</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/dfachart.jpg" alt=""></td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nfachart.jpg" alt=""></td></tr></tbody></table><ol><li>NFA中允许$\epsilon$转换边, 即允许$\epsilon$的输入, 而DFA不允许</li><li>NFA中的move(s,a)可能是个多元集合, 而DFA中的move(s,a)最多一个元素</li><li>DFA:<ul><li>优点: 快速定位</li><li>缺点: 字母表过大或大部分转换状态为空集时浪费空间</li></ul></li><li>NFA:<ul><li>优点: 表较小</li><li>缺点: 输入字符包括$\epsilon$, 一个状态对于某个字符，可能有多条输出边</li></ul></li><li>NFA更贴近于人们对正规式的认识</li><li>DFA因为每次状态转换都是确定性的<h4 id="DFA的构建"><a href="#DFA的构建" class="headerlink" title="DFA的构建"></a>DFA的构建</h4></li></ol></li><li><p>由自然语言描述构建<br>方法:  </p><ol><li>列出所有可能的状态</li><li>从各个状态出发, 构造边及输入字符记号</li></ol></li><li><p>由正规式构建 </p></li><li><p>由正规式创建NFA再构建</p><ol><li>NFA构建<br>NFA创建, 有如下框架<table><thead><tr><th align="center">正规式</th><th align="center">NFA</th></tr></thead><tbody><tr><td align="center">$\epsilon$</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_e.jpg" alt=""></td></tr><tr><td align="center">a</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_a.jpg" alt=""></td></tr><tr><td align="center">s|t</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_s_t.jpg" alt=""></td></tr><tr><td align="center">st</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_st.jpg" alt=""></td></tr><tr><td align="center">s*</td><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_sp.jpg" alt=""></td></tr><tr><td align="center">对于加括号的正规式(s), 使用N(s)作为其NFA</td><td align="center"></td></tr><tr><td align="center">举例:</td><td align="center"></td></tr><tr><td align="center">正规式</td><td align="center">NFA</td></tr><tr><td align="center">:—:</td><td align="center">:—:</td></tr><tr><td align="center">$ (a</td><td align="center">b)^*ab $</td></tr></tbody></table></li><li>NFA转化为DFA(子集构造法)<ul><li>有限自动机理论: 设L为一个有不确定的有限自动机接受的集合，则存在一个接受L的确定的有限自动机</li><li>DFA的一个状态是NFA的一个状态集合, 即对于一个输入$a_1a_2…a_n$ NFA可以到达所有状态为: $s_1, s_2, …, s_k$, 这些状态的集合为DFA的一个状态</li><li>如上述的$ (a|b)^*ab $ 其NFA为<img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_example.jpg" alt=""><br>则对于各种输入, 有如下集合<table><thead><tr><th align="center">集合名称</th><th align="center">输入</th><th align="center">状态</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">$\epsilon$</td><td align="center">{0,1,2,4,7}</td></tr><tr><td align="center">B</td><td align="center">$a$</td><td align="center">{1,2,3,4,6,7,8}</td></tr><tr><td align="center">C</td><td align="center">$b$</td><td align="center">{1,2,4,5,6,7}</td></tr><tr><td align="center">D</td><td align="center">$b, a, b$</td><td align="center">{1,2,4,5,6,7,9}</td></tr><tr><td align="center">依据上表列出状态转换表:</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_ex_chart.jpg" alt=""></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">再画出转换图:</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_ex_p.jpg" alt=""></td><td align="center"></td><td align="center"></td></tr></tbody></table></li></ul></li><li>DFA化简</li></ol><ul><li><p>通常由上述方法得来的DFA并非最简的</p></li><li><p>状态的可区分性: 存在串w, 使得从状态s开始, 对w进行状态转换, 最终停在某个接受状态; 而对从t开始的状态转换停在了某个非接收状态<br>   *<em>简言之, 对于两个状态, 若其对于所有相同的输入转换后有相同的接受状态, 则其为不可区分的, 否则可区分 *</em><br>如上面的转换图 A与B可区分, A与C不可区分</p></li></ul><ul><li>途径:<pre><code>  * 根据状态是否可以区分，将状态划分成若干个集合，每个集合内的状态之间都不可区分，而任意两个集合中的元素都是可以互相区分的* 依据原始的DFA，在合并后的状态基础上，建立新的状态转换关系</code></pre></li></ul></li><li><p>但是, 化简时DFA的状态转换函数必须是一个<strong>全函数</strong>(对于所有的输入都有对应的边，比如有a，b两个输入，那么每个状态必须有a，b两个出边，否则称之为部分函数)<br>部分函数需要添加<strong>死状态</strong>变成全函数，死状态即是添加一个状态，使所有缺失的边都指向它，它自己的所有输出边也指向本身，如下图<br><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/death.jpg" alt=""></p><pre><code>加上了死状态E但对于$(a|b)^*ab$, 无需加死状态</code></pre><ul><li>化简$(a|b)^*ab$<br>首先将接受状态和非接受状态分为两个部分<br>{A, B, C}, {D}<br>对于非接受状态，判断其转换函数<br>move({A, B, C}, a} = {B}             ———-&gt;   结果还是非接受状态<br>move({A, B, C}, b} = {C, D}        ———-&gt;  结果出现接受状态，而这种    改变是由于状态B造成，因此将B拆分出来<br>{A, C}, {B}, {D}<br>再重复以上过程<br>move({A, C}, a} = {B}<br>move({A, C}, b} = {C}<br>发现A，C不存在例外了<br>为格式化，我们将字母变成数字表示，将A,C合并<br>其中0代表A, C, 1代表B, 2代表D</li><li>最终:<br><img src="https://raw.githubusercontent.com/InnocentYoume/PicBed/master/img/nf_fin.jpg" alt=""></li></ul></li></ul><h5 id="至此-词法分析完成"><a href="#至此-词法分析完成" class="headerlink" title="至此, 词法分析完成!"></a>至此, 词法分析完成!</h5><p>参考链接:</p><p> <a href="https://blog.csdn.net/zp_icenow/article/details/82661407" target="_blank" rel="noopener">https://blog.csdn.net/zp_icenow/article/details/82661407</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;词法分析器&quot;&gt;&lt;a href=&quot;#词法分析器&quot; class=&quot;headerlink&quot; title=&quot;词法分析器&quot;&gt;&lt;/a&gt;词法分析器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;词法分析器: 把构成源程序的字符流翻译成记号(token)流，还完成和用户接口的一些任务&lt;br&gt;  其中
      
    
    </summary>
    
    
      <category term="编译原理" scheme="http://qidianxuan.github.io/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>HowtoWriteAnE-Mail</title>
    <link href="http://qidianxuan.github.io/2019/11/23/HowtoWriteAnE-Mail/"/>
    <id>http://qidianxuan.github.io/2019/11/23/HowtoWriteAnE-Mail/</id>
    <published>2019-11-23T07:09:39.000Z</published>
    <updated>2019-11-23T07:10:37.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Writing-an-Email-you-should"><a href="#Writing-an-Email-you-should" class="headerlink" title="Writing an Email you should:"></a>Writing an Email you should:</h1><ol><li>Use a Neutral Email Address</li><li>Use a short and accurate subject header</li><li>Use a proper salutation (formal)<ul><li>Title + Last name</li><li>Commonly used titles: ‘Mr.’ ,’Mrs.’,’Miss.’ …</li></ul></li><li>Introduce yourself in the First Paragraph if necessary (formal)</li><li>Write the actual message<ul><li>Do not indent</li><li>Insert a line break</li><li>No more than 5 paragraphs and No more than 5 sentences in each paragraph</li></ul></li><li>Use the correct form of leaving-taking</li><li>Sign properly</li><li>Proofread(校对) your email</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Writing-an-Email-you-should&quot;&gt;&lt;a href=&quot;#Writing-an-Email-you-should&quot; class=&quot;headerlink&quot; title=&quot;Writing an Email you should:&quot;&gt;&lt;/a&gt;Writ
      
    
    </summary>
    
    
      <category term="English" scheme="http://qidianxuan.github.io/categories/English/"/>
    
    
  </entry>
  
  <entry>
    <title>网络综合实验常用指令汇总</title>
    <link href="http://qidianxuan.github.io/2019/11/22/NetCmds/"/>
    <id>http://qidianxuan.github.io/2019/11/22/NetCmds/</id>
    <published>2019-11-22T09:50:02.000Z</published>
    <updated>2019-11-23T07:00:47.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h2><ul><li>模拟器 : HCL</li><li>路由器 : MSR36-20</li><li>交换机 : S5820V2-54QS-GE</li><li>操作系统 : ComwareV7.0<h2 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h2><h3 id="TELNET方式登录交换机"><a href="#TELNET方式登录交换机" class="headerlink" title="TELNET方式登录交换机"></a>TELNET方式登录交换机</h3>使用如下命令:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW]int vlan &#123;vlanid&#125;</span><br><span class="line">[SW-Vlan-interface1]ip address &#123;IP地址&#125; &#123;子网掩码&#125;</span><br><span class="line">[SW-Vlan-interface1]telnet server enable</span><br><span class="line">[SW]user-interface vty 0 4</span><br><span class="line">[SW-line-vty0-4]auth password</span><br><span class="line">[SW-line-vty0-4]set auth pass simple &#123;密码&#125;</span><br><span class="line">[SW-line-vty0-4]user level-3</span><br></pre></td></tr></table></figure>如上,之后在PC使用如下指令即可:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet &#123;之前设置的ip地址&#125;</span><br></pre></td></tr></table></figure>如果使用交换机,记得设置交换机ip地址</li></ul><h3 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h3><p>首先,要新建立一个聚合组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW]interface bridge-aggregation &#123;聚合端口号 0-1024&#125;</span><br></pre></td></tr></table></figure><p><br>注意 : 同一个聚合下的端口必须都工作在全双工模式下且速率相同<br><br>配置端口模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW-GigabitEthernet1/0/1]duplex &#123;工作模式: fall|half|auto&#125;</span><br><span class="line">[SW-GigabitEthernet1/0/1]speed &#123;速率: 10|100|1000|auto&#125;</span><br></pre></td></tr></table></figure><p>加入一个端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW]interface Ethernet &#123;端口号,以1/0/1为例&#125;</span><br><span class="line">[SW-GigabitEthernet1/0/1]port link-aggregation &#123;聚合端口号&#125;</span><br></pre></td></tr></table></figure><p>如上,端口 1/0/1 被 聚合 到 组2 内,之后,可以看一下结果<br><br>显示聚合信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW]display link-aggregation summary</span><br></pre></td></tr></table></figure><h3 id="生成树协议配置"><a href="#生成树协议配置" class="headerlink" title="生成树协议配置"></a>生成树协议配置</h3><p>首先,为了使各交换机使用相同的生成树协议标准,先在个交换机执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW]stp mode rstp</span><br><span class="line">[SW]stp patchcost-standard legacy</span><br></pre></td></tr></table></figure><p>因为STP默认开启,所以此时STP已打开</p><h3 id="VLAN配置"><a href="#VLAN配置" class="headerlink" title="VLAN配置"></a>VLAN配置</h3><p>创建vlan将端口加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW]vlan &#123;vlan id&#125;</span><br><span class="line">[SW-vlan2]prot GigabitEthernet &#123;起始端口号&#125; to &#123;终止端口号&#125;</span><br></pre></td></tr></table></figure><p>注意 : 也可以只写一个port来加入,这样创建的port类型为缺省值access port<br>要建立trunk port,需要首先对目标端口进行链路聚合(哪怕只有一个端口)<br>之后,进行如下设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW-bridge-aggregation1]port link-type trunk</span><br><span class="line">[SW-bridge-aggregation1]port trunk permit vlan &#123;源Vlan id&#125; to &#123;目标vlan id&#125;</span><br></pre></td></tr></table></figure><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><h3 id="使用TELNET登录路由器"><a href="#使用TELNET登录路由器" class="headerlink" title="使用TELNET登录路由器"></a>使用TELNET登录路由器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[RT]telnet server enable  /缺省情况下，Telnet服务处于关闭状态</span><br><span class="line">[RT]line vty 0   /进入一个或多个VTY用户线视图</span><br><span class="line">[RT-line-vty0]authentication-mode scheme  /设置登录用户的认证方式为通过AAA认证</span><br><span class="line">[RT]local-user test class manage（创建用户名）</span><br><span class="line">[RT-luser-manage-test]password simple &#123;密码&#125;</span><br><span class="line">[RT-luser-manage-test]service-type telnet</span><br><span class="line">[RT-luser-manage-test]authorization-attribute user-role network-admin（设置登陆权限是超级用户最高权限）</span><br></pre></td></tr></table></figure><h3 id="路由协议设置"><a href="#路由协议设置" class="headerlink" title="路由协议设置"></a>路由协议设置</h3><p>静态路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route-static &#123;dest ip addr&#125; &#123;mask&#125; &#123;next-hoop&#125;</span><br></pre></td></tr></table></figure><p>显示路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsiplay ip routing-table</span><br></pre></td></tr></table></figure><p>rip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[RT]rip</span><br><span class="line">[RT-rip1]network &#123;指定网段地址&#125; &#123;反子网掩码&#125;</span><br></pre></td></tr></table></figure><p>注意:需要添加所有需要的网段地址,包括自己</p><br>ospf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[RT]ospf</span><br><span class="line">[RT-ospf-1]area 0</span><br><span class="line">[RT-ospf-1-area-0.0.0.0]network &#123;要启用的ip&#125; &#123;反子网掩码&#125;</span><br></pre></td></tr></table></figure><h3 id="广域网协议设置"><a href="#广域网协议设置" class="headerlink" title="广域网协议设置"></a>广域网协议设置</h3><h4 id="PAP"><a href="#PAP" class="headerlink" title="PAP"></a>PAP</h4><p><br>pap为双向认证,需要双方都开启<br><br><br><br>验证方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[RA-Serial1/0]ppp authentication-mode pap</span><br><span class="line">[RA]local-user &#123;用户名&#125;</span><br><span class="line">[RA-luser-manage-ra]service-type ppp</span><br><span class="line">[RA-luser-manage-ra]password simple &#123;密码&#125;</span><br><span class="line">[RA-Serial1/0]shutdown</span><br><span class="line">[RA-Serial1/0]undo shutdwon</span><br></pre></td></tr></table></figure><p>被验证方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RB-Serial1/0]ppp pap local-user &#123;用户名&#125; password simple &#123;密码&#125;</span><br></pre></td></tr></table></figure><p>注意:此处用户名与密码须与上述相同<br><br>此时只实现了单向验证,双方是无法ping通的,需要实现双向认证</p><h4 id="CHAP"><a href="#CHAP" class="headerlink" title="CHAP"></a>CHAP</h4><p><br>验证方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[RA-Serial1/0]ppp authentication-mode chap</span><br><span class="line">[RA-Serial1/0]ppp chap user &#123;对方用户名&#125;</span><br><span class="line">[RA]local-user &#123;自己用户名&#125;</span><br><span class="line">[RA-luser-manage-ra]service-type ppp</span><br><span class="line">[RA-luser-manage-ra]password simple &#123;密码&#125;</span><br><span class="line">[RA-Serial1/0]shutdown</span><br><span class="line">[RA-Serial1/0]undo shutdwon</span><br></pre></td></tr></table></figure><p>被验证方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[RA-Serial1/0]ppp chap user &#123;对方用户名&#125;</span><br><span class="line">[RA]local-user &#123;自己用户名&#125;</span><br><span class="line">[RA-luser-manage-ra]service-type ppp</span><br><span class="line">[RA-luser-manage-ra]password simple &#123;密码&#125;</span><br><span class="line">[RA-Serial1/0]shutdown</span><br><span class="line">[RA-Serial1/0]undo shutdwon</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>基于basic ACL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[RT]acl basic &#123;acl编号2000~&#125; match-order auto</span><br><span class="line">[RT-acl-inv4-adv-2001]rule &#123;permit|deny&#125; ip &#123;source|dest&#125; &#123;反子网掩码&#125;</span><br><span class="line">[RT-Eth/Ser]packet-filter 2001 &#123;inbound|outbound&#125;</span><br></pre></td></tr></table></figure><p>基于advanced ACL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[RT]acl advanced &#123;acl编号3000~&#125; match-order auto</span><br><span class="line">[RT-acl-inv4-adv-3001]rule &#123;permit|deny&#125; ip source &#123;源ip地址|any&#125; &#123;反掩码|前为any时不写&#125; destination &#123;目的ip地址|any&#125; &#123;反掩码|前为any时不写&#125;</span><br><span class="line">[RT-Eth/Ser] packet-filter 3001 &#123;inbound|outbound&#125;</span><br></pre></td></tr></table></figure><h3 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h3><p>首先要建立地址池</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[RT]nat address-group &#123;id&#125; </span><br><span class="line">[RT-address-group-1]address &#123;被映射ip组&#125; &#123;目标映射IP组&#125;</span><br></pre></td></tr></table></figure><p>同时要建立acl,如防火墙<br><br>最后,应用在端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RT-Serial1/0]nat outbound &#123;acl id&#125; address-group &#123;group id&#125;</span><br></pre></td></tr></table></figure><p>另外,对于具体到某个端口的nat映射,有如下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RT-Serial1/0]nat server protocol tcp global &#123;映射ip&#125; &#123;映射端口号&#125; inside &#123;被映射的ip&#125; &#123;被映射端口号&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实验设备&quot;&gt;&lt;a href=&quot;#实验设备&quot; class=&quot;headerlink&quot; title=&quot;实验设备&quot;&gt;&lt;/a&gt;实验设备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;模拟器 : HCL&lt;/li&gt;
&lt;li&gt;路由器 : MSR36-20&lt;/li&gt;
&lt;li&gt;交换机 : S5820V2
      
    
    </summary>
    
    
      <category term="网络" scheme="http://qidianxuan.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
</feed>
